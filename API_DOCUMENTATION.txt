# Documentação da API RiseUp

## Autenticação
Todas as requisições (exceto login e registro) precisam incluir o token JWT no header:
```
Authorization: Bearer {seu_token}
```

## Endpoints

### Autenticação

#### POST /api/auth/register
Registra um novo usuário.

**Request Body:**
```json
{
    "name": "string",
    "email": "string",
    "password": "string",
    "phone": "string",
    "cpf": "string",
    "birthDate": "string (formato: yyyy-MM-dd)",
    "address": "string",
    "city": "string",
    "state": "string",
    "zipCode": "string",
    "profileType": "string (Volunteer ou Organization)"
}
```

**Response (200):**
```json
{
    "id": "string",
    "name": "string",
    "email": "string",
    "token": "string (JWT token)"
}
```

#### POST /api/auth/login
Realiza o login do usuário.

**Request Body:**
```json
{
    "email": "string",
    "password": "string"
}
```

**Response (200):**
```json
{
    "id": "string",
    "name": "string",
    "email": "string",
    "token": "string (JWT token)"
}
```

### Usuários

#### GET /api/users/me
Obtém os dados do usuário logado.

**Response (200):**
```json
{
    "id": "string",
    "name": "string",
    "email": "string",
    "phone": "string",
    "cpf": "string",
    "birthDate": "string",
    "address": "string",
    "city": "string",
    "state": "string",
    "zipCode": "string",
    "profileType": "string"
}
```

#### PUT /api/users/me
Atualiza os dados do usuário logado.

**Request Body:**
```json
{
    "name": "string",
    "phone": "string",
    "address": "string",
    "city": "string",
    "state": "string",
    "zipCode": "string"
}
```

**Response (200):**
```json
{
    "id": "string",
    "name": "string",
    "email": "string",
    "phone": "string",
    "cpf": "string",
    "birthDate": "string",
    "address": "string",
    "city": "string",
    "state": "string",
    "zipCode": "string",
    "profileType": "string"
}
```

### Organizações

#### GET /api/organizations
Lista todas as organizações.

**Response (200):**
```json
[
    {
        "id": "string",
        "name": "string",
        "email": "string",
        "phone": "string",
        "cnpj": "string",
        "address": "string",
        "city": "string",
        "state": "string",
        "zipCode": "string",
        "description": "string",
        "website": "string",
        "socialMedia": "string"
    }
]
```

#### GET /api/organizations/{id}
Obtém uma organização específica.

**Response (200):**
```json
{
    "id": "string",
    "name": "string",
    "email": "string",
    "phone": "string",
    "cnpj": "string",
    "address": "string",
    "city": "string",
    "state": "string",
    "zipCode": "string",
    "description": "string",
    "website": "string",
    "socialMedia": "string"
}
```

#### PUT /api/organizations/me
Atualiza os dados da organização logada.

**Request Body:**
```json
{
    "name": "string",
    "phone": "string",
    "address": "string",
    "city": "string",
    "state": "string",
    "zipCode": "string",
    "description": "string",
    "website": "string",
    "socialMedia": "string"
}
```

**Response (200):**
```json
{
    "id": "string",
    "name": "string",
    "email": "string",
    "phone": "string",
    "cnpj": "string",
    "address": "string",
    "city": "string",
    "state": "string",
    "zipCode": "string",
    "description": "string",
    "website": "string",
    "socialMedia": "string"
}
```

### Oportunidades

#### GET /api/opportunities
Lista todas as oportunidades.

**Response (200):**
```json
[
    {
        "id": "string",
        "title": "string",
        "description": "string",
        "requirements": "string",
        "location": "string",
        "startDate": "string (formato: yyyy-MM-dd)",
        "endDate": "string (formato: yyyy-MM-dd)",
        "status": "string (Open, InProgress, Closed)",
        "organizationId": "string",
        "organization": {
            "id": "string",
            "name": "string"
        },
        "regions": ["string"],
        "activities": [
            {
                "id": "string",
                "title": "string",
                "description": "string",
                "date": "string (formato: yyyy-MM-dd)",
                "status": "string (Pending, Completed, Cancelled)"
            }
        ]
    }
]
```

#### GET /api/opportunities/{id}
Obtém uma oportunidade específica.

**Response (200):**
```json
{
    "id": "string",
    "title": "string",
    "description": "string",
    "requirements": "string",
    "location": "string",
    "startDate": "string (formato: yyyy-MM-dd)",
    "endDate": "string (formato: yyyy-MM-dd)",
    "status": "string (Open, InProgress, Closed)",
    "organizationId": "string",
    "organization": {
        "id": "string",
        "name": "string"
    },
    "regions": ["string"],
    "activities": [
        {
            "id": "string",
            "title": "string",
            "description": "string",
            "date": "string (formato: yyyy-MM-dd)",
            "status": "string (Pending, Completed, Cancelled)"
        }
    ]
}
```

#### POST /api/opportunities
Cria uma nova oportunidade (apenas para organizações).

**Request Body:**
```json
{
    "title": "string",
    "description": "string",
    "requirements": "string",
    "location": "string",
    "startDate": "string (formato: yyyy-MM-dd)",
    "endDate": "string (formato: yyyy-MM-dd)",
    "regions": ["string"]
}
```

**Response (201):**
```json
{
    "id": "string",
    "title": "string",
    "description": "string",
    "requirements": "string",
    "location": "string",
    "startDate": "string (formato: yyyy-MM-dd)",
    "endDate": "string (formato: yyyy-MM-dd)",
    "status": "string (Open)",
    "organizationId": "string",
    "regions": ["string"]
}
```

#### PUT /api/opportunities/{id}
Atualiza uma oportunidade (apenas para a organização que a criou).

**Request Body:**
```json
{
    "title": "string",
    "description": "string",
    "requirements": "string",
    "location": "string",
    "startDate": "string (formato: yyyy-MM-dd)",
    "endDate": "string (formato: yyyy-MM-dd)",
    "status": "string (Open, InProgress, Closed)",
    "regions": ["string"]
}
```

**Response (200):**
```json
{
    "id": "string",
    "title": "string",
    "description": "string",
    "requirements": "string",
    "location": "string",
    "startDate": "string (formato: yyyy-MM-dd)",
    "endDate": "string (formato: yyyy-MM-dd)",
    "status": "string",
    "organizationId": "string",
    "regions": ["string"]
}
```

#### DELETE /api/opportunities/{id}
Remove uma oportunidade (apenas para a organização que a criou).

**Response (204):** Sem conteúdo

### Atividades

#### GET /api/opportunities/{opportunityId}/activities
Lista todas as atividades de uma oportunidade.

**Response (200):**
```json
[
    {
        "id": "string",
        "title": "string",
        "description": "string",
        "date": "string (formato: yyyy-MM-dd)",
        "status": "string (Pending, Completed, Cancelled)",
        "opportunityId": "string"
    }
]
```

#### POST /api/opportunities/{opportunityId}/activities
Cria uma nova atividade para uma oportunidade (apenas para organizações).

**Request Body:**
```json
{
    "title": "string",
    "description": "string",
    "date": "string (formato: yyyy-MM-dd)"
}
```

**Response (201):**
```json
{
    "id": "string",
    "title": "string",
    "description": "string",
    "date": "string (formato: yyyy-MM-dd)",
    "status": "string (Pending)",
    "opportunityId": "string"
}
```

#### PUT /api/opportunities/{opportunityId}/activities/{id}
Atualiza uma atividade (apenas para organizações).

**Request Body:**
```json
{
    "title": "string",
    "description": "string",
    "date": "string (formato: yyyy-MM-dd)",
    "status": "string (Pending, Completed, Cancelled)"
}
```

**Response (200):**
```json
{
    "id": "string",
    "title": "string",
    "description": "string",
    "date": "string (formato: yyyy-MM-dd)",
    "status": "string",
    "opportunityId": "string"
}
```

#### DELETE /api/opportunities/{opportunityId}/activities/{id}
Remove uma atividade (apenas para organizações).

**Response (204):** Sem conteúdo

## Códigos de Erro

- 400: Requisição inválida
- 401: Não autorizado (token inválido ou ausente)
- 403: Acesso proibido (sem permissão)
- 404: Recurso não encontrado
- 500: Erro interno do servidor

## Observações

1. Todas as datas devem ser enviadas no formato "yyyy-MM-dd"
2. O token JWT deve ser incluído no header de todas as requisições (exceto login e registro)
3. Apenas organizações podem criar e gerenciar oportunidades e atividades
4. Voluntários podem apenas visualizar oportunidades e atividades
5. As regiões são uma lista de strings que representam as áreas geográficas da oportunidade 